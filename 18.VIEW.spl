/*
 데이터베이스 스키마: 컴퓨터 과학에서 데이터베이스 스키마는 데이터베이스에서 자료의 구조, 자료의 표현 방법, 자료 간의 관계를 '형식 언어로 정의한 구조'
 	풀이: 사용자가 계정을 받아서 여러가지 방법으로 데이터(자료)를 저장하고 관리하는 공간
 		 오라클 등 DBMS는 스키마에 여러 객체를 생성해서 사용합니다.
 
 VIEW(뷰): 가상테이블
 ㄴSELECT 조회 결과를 미리컴파일하여 오라클 객체로 저장
 ㄴSELECT 조회 할 때 테이블처럼 사용
 ㄴINSERT, UPDATE, DELETE는 제약이 많아 사용되지 않음
 
 실제 비지니스 로직을 처리하는 sql이 많이 복잡해질 수 있음(조인 및 서브쿼리 횟수 많아짐)
 ->자주 사용하면서 일회용으로 처리가 되면 성능에 문제가 생김->비효율적
 ->가상 테이블(뷰) 또는 메소드처럼 프로시저(트랜잭션 단위로 구성)를 사용
 
 CREATE VIEW : 권한이 필요 ->관리자 계정으로 들어가서 권한을 주어야함
 SQL> grant create view to C##IDEV;
 실행 후 재연결 혹은 재접속

 */
CREATE VIEW V_CUSTOMSALE
AS
SELECT TB.CUSTOMID , TB.PCODE ,SUM(TP.PRICE*TB.QUANTITY) MONEY, 
RANK() OVER (PARTITION BY TB.CUSTOMID ORDER BY SUM(TP.PRICE*TB.QUANTITY)DESC) "RANK"
FROM TBL_BUY TB, TBL_PRODUCT TP
WHERE TB.PCODE = TP.PCODE
GROUP BY TB.CUSTOMID, TB.PCODE ;

--일반적인 select처럼 조회형식 모두 사용 가능
SELECT vc.*, TP.PNAME 
FROM V_CUSTOMSALE vc ,TBL_PRODUCT tp 
WHERE vc.PCODE=tp.PCODE AND "RANK" =1;